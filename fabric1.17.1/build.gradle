plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
}

base {
    archivesName = gradle.ext.fabricname
}
version = gradle.ext.modversion
group = gradle.ext.fabricgroup

loom {
    runs {
        client {
            runDir = "../run"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${gradle.ext.fabricloader}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}${project.fabric_build_ext}"
}

processResources {
    inputs.property "modid", gradle.ext.modid
    inputs.property "version", project.version
    inputs.property "modname", gradle.ext.modname
    inputs.property "moddesc", gradle.ext.moddesc
    inputs.property "modauthor", gradle.ext.modauthor
    inputs.property "modsources", gradle.ext.modsources
    inputs.property "modissues", gradle.ext.modissues
    inputs.property "modlicense", gradle.ext.modlicense
    inputs.property "fabricloader", gradle.ext.fabricloader
    inputs.property "fabric_version", project.fabric_version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "java_version", project.java_version
    
    filesMatching("fabric.mod.json") {
        expand inputs.properties
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
    def targetVersion = 16
    if (JavaVersion.current().isJava9Compatible()) {
         it.options.release = targetVersion
    } else {
         it.sourceCompatibility = JavaVersion.toVersion(targetVersion)
         it.targetCompatibility = JavaVersion.toVersion(targetVersion)
    }
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
